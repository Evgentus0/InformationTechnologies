syntax = "proto3";

package dbmsCore;

service GrpcDBService {
  rpc CreateDatabase (CreateDbRequest) returns (BaseReply);
  rpc CreateTable (TableRequest) returns (BaseReply);
  rpc DeleteTable (TableRequest) returns (BaseReply);
  rpc GetTableList (GetTableListRequest) returns (GetTableListReply);
  rpc GetTable (GetEntityRequest) returns (GetEntityReply);
}

service GrpcTableService {
	rpc AddColumn (AddColumnRequest) returns (BaseReply);
    rpc DropColumn (DropColumnRequst) returns (BaseReply);
	rpc Insert (InsertRequest) returns (BaseReply);
	rpc Delete (DeleteRequest) returns (BaseReply);
	rpc Update (UpdateRequest) returns (BaseReply);
	rpc Select (SelectRequest) returns (SelectReply);
	rpc Union (UnionRequest) returns (SelectReply);
}

message GetEntityRequest {
	string dbName = 1;
	string tableName = 2;
}

message Column {
	string name = 1;
	int32 dataValueType = 2;
}

message GetEntityReply {
	int32 code = 1;
	string message = 2;
	string stackTrace = 3;
	string name = 4;
	repeated Column columns = 5;
}

message Validator {
	string value = 1;
	int32 operation = 2;
	string dataValueType = 3;
}

message AddColumnRequest {
	string dbName = 1;
	string tableName = 2;
	string columnName = 3;
	int32 dataValueType = 4;
	repeated Validator validators = 5;
}

message DropColumnRequst {
	string dbName = 1;
	string tableName = 2;
	string columnName = 3;
}

message DeleteRequest {
	string dbName = 1;
	string tableName = 2;
	repeated string guids = 3;
}

message Row {
	repeated string items = 1;
}

message InsertRequest {
	string dbName = 1;
	string tableName = 2;
	repeated Row rows = 3;
}

message ConditionsFieldEntry {
    string key = 1;
    repeated Validator value = 2;
}

message UpdateRequest {
	string dbName = 1;
	string tableName = 2;
	repeated Row rows = 3;
	repeated ConditionsFieldEntry conditions = 4;
}

message SelectRequest {
	string dbName = 1;
	string tableName = 2;
	int32 top = 3;
	int32 offset = 4;
	repeated ConditionsFieldEntry conditions = 5;
}

message UnionRequest {
	string dbName = 1;
	string firstTableName = 2;
	string secondTableName = 3;
}

message CrossJoinRequest {
	string dbName = 1;
	string firstTableName = 2;
	string secondTableName = 3;
}

message SelectReply {
	int32 code = 1;
	string message = 2;
	string stackTrace = 3;
	repeated Row rows = 4;
}


message CreateDbRequest {
	string name = 1;
	string rootPath = 2;
	int64 fileSize = 3;
	int32 sourceType = 4;
}

message TableRequest {
	string dbName = 1;
	string tableName = 2;
}

message GetTableListRequest {
	string dbName = 1;
}

message GetTableListReply {
	int32 code = 1;
	string message = 2;
	string stackTrace = 3;
	repeated string tables = 4;
}

message BaseReply {
	int32 code = 1;
	string message = 2;
	string stackTrace = 3;
}